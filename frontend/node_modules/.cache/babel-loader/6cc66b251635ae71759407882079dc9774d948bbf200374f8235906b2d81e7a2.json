{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rachu\\\\Downloads\\\\AI resume2\\\\ai-career-platform\\\\frontend\\\\src\\\\components\\\\PortfolioGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { generatePortfolio } from '../services/api';\nimport './PortfolioGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioGenerator = ({\n  resumeData: propResumeData\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [generating, setGenerating] = useState(false);\n  const [portfolio, setPortfolio] = useState(null);\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const [extractedData, setExtractedData] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setUploadError(null);\n    if (selectedFile) {\n      // Upload and parse the resume file\n      const formData = new FormData();\n      formData.append('resume', selectedFile);\n\n      // Upload the file to get parsed content\n      fetch('http://localhost:5000/api/resume/upload', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        if (data.extractedInfo) {\n          setExtractedData(data.extractedInfo);\n          setIsFileUploaded(true);\n        } else {\n          setUploadError(data.error || 'Failed to extract resume data');\n        }\n      }).catch(error => {\n        console.error('Upload error:', error);\n        setUploadError('Failed to upload and parse resume: ' + error.message);\n      });\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragOver(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragOver(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragOver(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      const selectedFile = e.dataTransfer.files[0];\n      setFile(selectedFile);\n      if (selectedFile) {\n        // Upload and parse the resume file\n        const formData = new FormData();\n        formData.append('resume', selectedFile);\n\n        // Upload the file to get parsed content\n        fetch('http://localhost:5000/api/resume/upload', {\n          method: 'POST',\n          body: formData\n        }).then(response => response.json()).then(data => {\n          if (data.extractedInfo) {\n            setExtractedData(data.extractedInfo);\n            setIsFileUploaded(true);\n          } else {\n            setUploadError(data.error || 'Failed to extract resume data');\n          }\n        }).catch(error => {\n          console.error('Upload error:', error);\n          setUploadError('Failed to upload and parse resume: ' + error.message);\n        });\n      }\n    }\n  };\n  const handleGenerate = async e => {\n    e.preventDefault();\n    if (!isFileUploaded) {\n      alert('Please upload a resume file first');\n      return;\n    }\n    setGenerating(true);\n    try {\n      // Use extracted data from uploaded resume\n      let dataToUse = {};\n      if (extractedData) {\n        // Extract data from parsed resume\n        const contactInfo = extractedData.contact_info || {};\n        const skills = extractedData.skills || [];\n        const experience = extractedData.experience || \"Experience details would be extracted from resume\";\n        const education = extractedData.education || \"Education details would be extracted from resume\";\n        const projects = extractedData.projects || \"Project details would be extracted from resume\";\n        dataToUse = {\n          name: contactInfo.name || \"Unknown\",\n          email: contactInfo.emails && contactInfo.emails[0] || \"unknown@example.com\",\n          phone: contactInfo.phones && contactInfo.phones[0] || \"N/A\",\n          skills: skills.join(', '),\n          experience: experience,\n          education: education,\n          projects: projects\n        };\n      } else if (propResumeData) {\n        // Fallback to prop data\n        const contactInfo = propResumeData.contact_info || {};\n        const skills = propResumeData.skills || [];\n        dataToUse = {\n          name: contactInfo.name || \"Unknown\",\n          email: contactInfo.emails && contactInfo.emails[0] || \"unknown@example.com\",\n          phone: contactInfo.phones && contactInfo.phones[0] || \"N/A\",\n          skills: skills.join(', '),\n          experience: propResumeData.experience || \"Experience details would be extracted from resume\",\n          education: propResumeData.education || \"Education details would be extracted from resume\",\n          projects: propResumeData.projects || \"Project details would be extracted from resume\"\n        };\n      } else {\n        // Default fallback\n        dataToUse = {\n          name: \"Default Name\",\n          email: \"default@example.com\",\n          phone: \"N/A\",\n          skills: \"JavaScript, HTML, CSS\",\n          experience: \"Web development experience\",\n          education: \"Computer Science degree\",\n          projects: \"Web application projects\"\n        };\n      }\n      const response = await generatePortfolio(dataToUse);\n      setPortfolio(response.data);\n    } catch (error) {\n      console.error('Portfolio generation error:', error);\n      setPortfolio({\n        error: 'Failed to generate portfolio: ' + error.message\n      });\n    } finally {\n      setGenerating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Portfolio Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleGenerate,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `file-upload-area ${isDragOver ? 'drag-over' : ''}`,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload-icon\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload-text\",\n          children: file ? file.name : 'Drag & Drop your resume here'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload-hint\",\n          children: file ? 'File selected' : 'Supports PDF, DOC, DOCX files (Max 5MB)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"resumeFile\",\n          accept: \".pdf,.doc,.docx\",\n          onChange: handleFileChange,\n          className: \"file-upload-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), isFileUploaded && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Resume parsed successfully. Click \\\"Generate Portfolio\\\" to create your portfolio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 28\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"Error: \", uploadError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: generating || !isFileUploaded,\n        children: generating ? 'Generating Portfolio...' : 'Generate Portfolio'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), portfolio && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generated-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: portfolio.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", portfolio.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", portfolio.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: portfolio.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: skill\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: portfolio.experience\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: portfolio.education\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), portfolio.projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Technologies: \", project.technologies.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"portfolio-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Portfolio Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), portfolio.note && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"portfolio-note\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: portfolio.note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Generated Portfolio URL (Demo):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              alert('This is a demo URL. In a real implementation, this would link to your generated portfolio website.');\n            },\n            children: portfolio.portfolioUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioGenerator, \"zR/HKPPclhWD56x8Q60CgzNhyzI=\");\n_c = PortfolioGenerator;\nexport default PortfolioGenerator;\nvar _c;\n$RefreshReg$(_c, \"PortfolioGenerator\");","map":{"version":3,"names":["React","useState","generatePortfolio","jsxDEV","_jsxDEV","PortfolioGenerator","resumeData","propResumeData","_s","file","setFile","generating","setGenerating","portfolio","setPortfolio","isFileUploaded","setIsFileUploaded","extractedData","setExtractedData","uploadError","setUploadError","isDragOver","setIsDragOver","handleFileChange","e","selectedFile","target","files","formData","FormData","append","fetch","method","body","then","response","json","data","extractedInfo","error","catch","console","message","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","handleGenerate","alert","dataToUse","contactInfo","contact_info","skills","experience","education","projects","name","email","emails","phone","phones","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onDragOver","onDragLeave","onDrop","type","id","accept","onChange","disabled","map","skill","index","project","title","description","technologies","note","href","onClick","portfolioUrl","_c","$RefreshReg$"],"sources":["C:/Users/rachu/Downloads/AI resume2/ai-career-platform/frontend/src/components/PortfolioGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { generatePortfolio } from '../services/api';\r\nimport './PortfolioGenerator.css';\r\n\r\nconst PortfolioGenerator = ({ resumeData: propResumeData }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [generating, setGenerating] = useState(false);\r\n  const [portfolio, setPortfolio] = useState(null);\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\r\n  const [extractedData, setExtractedData] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n    setUploadError(null);\r\n    \r\n    if (selectedFile) {\r\n      // Upload and parse the resume file\r\n      const formData = new FormData();\r\n      formData.append('resume', selectedFile);\r\n      \r\n      // Upload the file to get parsed content\r\n      fetch('http://localhost:5000/api/resume/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.extractedInfo) {\r\n          setExtractedData(data.extractedInfo);\r\n          setIsFileUploaded(true);\r\n        } else {\r\n          setUploadError(data.error || 'Failed to extract resume data');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Upload error:', error);\r\n        setUploadError('Failed to upload and parse resume: ' + error.message);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      const selectedFile = e.dataTransfer.files[0];\r\n      setFile(selectedFile);\r\n      \r\n      if (selectedFile) {\r\n        // Upload and parse the resume file\r\n        const formData = new FormData();\r\n        formData.append('resume', selectedFile);\r\n        \r\n        // Upload the file to get parsed content\r\n        fetch('http://localhost:5000/api/resume/upload', {\r\n          method: 'POST',\r\n          body: formData,\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.extractedInfo) {\r\n            setExtractedData(data.extractedInfo);\r\n            setIsFileUploaded(true);\r\n          } else {\r\n            setUploadError(data.error || 'Failed to extract resume data');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Upload error:', error);\r\n          setUploadError('Failed to upload and parse resume: ' + error.message);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGenerate = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!isFileUploaded) {\r\n      alert('Please upload a resume file first');\r\n      return;\r\n    }\r\n\r\n    setGenerating(true);\r\n    \r\n    try {\r\n      // Use extracted data from uploaded resume\r\n      let dataToUse = {};\r\n      \r\n      if (extractedData) {\r\n        // Extract data from parsed resume\r\n        const contactInfo = extractedData.contact_info || {};\r\n        const skills = extractedData.skills || [];\r\n        const experience = extractedData.experience || \"Experience details would be extracted from resume\";\r\n        const education = extractedData.education || \"Education details would be extracted from resume\";\r\n        const projects = extractedData.projects || \"Project details would be extracted from resume\";\r\n        \r\n        dataToUse = {\r\n          name: contactInfo.name || \"Unknown\",\r\n          email: (contactInfo.emails && contactInfo.emails[0]) || \"unknown@example.com\",\r\n          phone: (contactInfo.phones && contactInfo.phones[0]) || \"N/A\",\r\n          skills: skills.join(', '),\r\n          experience: experience,\r\n          education: education,\r\n          projects: projects\r\n        };\r\n      } else if (propResumeData) {\r\n        // Fallback to prop data\r\n        const contactInfo = propResumeData.contact_info || {};\r\n        const skills = propResumeData.skills || [];\r\n        \r\n        dataToUse = {\r\n          name: contactInfo.name || \"Unknown\",\r\n          email: (contactInfo.emails && contactInfo.emails[0]) || \"unknown@example.com\",\r\n          phone: (contactInfo.phones && contactInfo.phones[0]) || \"N/A\",\r\n          skills: skills.join(', '),\r\n          experience: propResumeData.experience || \"Experience details would be extracted from resume\",\r\n          education: propResumeData.education || \"Education details would be extracted from resume\",\r\n          projects: propResumeData.projects || \"Project details would be extracted from resume\"\r\n        };\r\n      } else {\r\n        // Default fallback\r\n        dataToUse = {\r\n          name: \"Default Name\",\r\n          email: \"default@example.com\",\r\n          phone: \"N/A\",\r\n          skills: \"JavaScript, HTML, CSS\",\r\n          experience: \"Web development experience\",\r\n          education: \"Computer Science degree\",\r\n          projects: \"Web application projects\"\r\n        };\r\n      }\r\n      \r\n      const response = await generatePortfolio(dataToUse);\r\n      setPortfolio(response.data);\r\n    } catch (error) {\r\n      console.error('Portfolio generation error:', error);\r\n      setPortfolio({ error: 'Failed to generate portfolio: ' + error.message });\r\n    } finally {\r\n      setGenerating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"portfolio-generator\">\r\n      <h2>AI Portfolio Generator</h2>\r\n      <form onSubmit={handleGenerate}>\r\n        <div \r\n          className={`file-upload-area ${isDragOver ? 'drag-over' : ''}`}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <div className=\"file-upload-icon\">📁</div>\r\n          <div className=\"file-upload-text\">\r\n            {file ? file.name : 'Drag & Drop your resume here'}\r\n          </div>\r\n          <div className=\"file-upload-hint\">\r\n            {file ? 'File selected' : 'Supports PDF, DOC, DOCX files (Max 5MB)'}\r\n          </div>\r\n          <input \r\n            type=\"file\"\r\n            id=\"resumeFile\"\r\n            accept=\".pdf,.doc,.docx\"\r\n            onChange={handleFileChange}\r\n            className=\"file-upload-input\"\r\n          />\r\n        </div>\r\n        {isFileUploaded && <p>Resume parsed successfully. Click \"Generate Portfolio\" to create your portfolio.</p>}\r\n        {uploadError && <p className=\"error\">Error: {uploadError}</p>}\r\n        \r\n        <button type=\"submit\" disabled={generating || !isFileUploaded}>\r\n          {generating ? 'Generating Portfolio...' : 'Generate Portfolio'}\r\n        </button>\r\n      </form>\r\n      \r\n      {portfolio && (\r\n        <div className=\"generated-portfolio\">\r\n          <h3>Generated Portfolio</h3>\r\n          <div className=\"portfolio-content\">\r\n            <h4>{portfolio.name}</h4>\r\n            <p>Email: {portfolio.email}</p>\r\n            <p>Phone: {portfolio.phone}</p>\r\n            \r\n            <h5>Skills</h5>\r\n            <ul>\r\n              {portfolio.skills.map((skill, index) => (\r\n                <li key={index}>{skill}</li>\r\n              ))}\r\n            </ul>\r\n            \r\n            <h5>Experience</h5>\r\n            <p>{portfolio.experience}</p>\r\n            \r\n            <h5>Education</h5>\r\n            <p>{portfolio.education}</p>\r\n            \r\n            <h5>Projects</h5>\r\n            {portfolio.projects.map((project, index) => (\r\n              <div key={index} className=\"project\">\r\n                <h6>{project.title}</h6>\r\n                <p>{project.description}</p>\r\n                <p>Technologies: {project.technologies.join(', ')}</p>\r\n              </div>\r\n            ))}\r\n            \r\n            <div className=\"portfolio-link\">\r\n              <h5>Portfolio Information</h5>\r\n              {portfolio.note && (\r\n                <div className=\"portfolio-note\">\r\n                  <p>{portfolio.note}</p>\r\n                </div>\r\n              )}\r\n              <p><strong>Generated Portfolio URL (Demo):</strong></p>\r\n              <a href=\"#\" onClick={(e) => {\r\n                e.preventDefault();\r\n                alert('This is a demo URL. In a real implementation, this would link to your generated portfolio website.');\r\n              }}>\r\n                {portfolio.portfolioUrl}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}