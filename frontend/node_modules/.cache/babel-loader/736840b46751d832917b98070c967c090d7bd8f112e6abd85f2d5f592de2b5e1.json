{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rachu\\\\Downloads\\\\AI resume2\\\\ai-career-platform\\\\frontend\\\\src\\\\components\\\\InterviewPractice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { predictInterviewQuestions } from '../services/api';\nimport './InterviewPractice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InterviewPractice = ({\n  resumeData\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  // Fetch interview questions when resume data is available\n  useEffect(() => {\n    if (resumeData) {\n      fetchInterviewQuestions();\n    }\n  }, [resumeData]);\n\n  // Timer effect\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTimer(timer => timer + 1);\n      }, 1000);\n    } else if (!isActive && timer !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, timer]);\n  const fetchInterviewQuestions = async () => {\n    setLoading(true);\n    try {\n      const response = await predictInterviewQuestions(resumeData);\n      setQuestions(response.data.questions || []);\n      setTotalScore(response.data.questions ? response.data.questions.length * 10 : 0);\n    } catch (error) {\n      console.error('Error fetching interview questions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const startPractice = () => {\n    if (questions.length > 0) {\n      setPracticeMode(true);\n      setCurrentQuestionIndex(0);\n      setUserAnswer('');\n      setFeedback('');\n      setScore(0);\n      setTimer(0);\n      setIsActive(true);\n    }\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setUserAnswer('');\n      setFeedback('');\n    } else {\n      // End of practice\n      setIsActive(false);\n      setFeedback('Practice completed! Great job!');\n    }\n  };\n  const submitAnswer = () => {\n    // In a real implementation, this would use AI to analyze the answer\n    // For now, we'll provide simulated feedback\n    const simulatedFeedback = [\"Great answer! You demonstrated strong knowledge of the subject.\", \"Good response, but consider providing more specific examples.\", \"Your answer shows understanding, but try to be more concise.\", \"Excellent point! That's exactly what interviewers look for.\", \"Good start, but you might want to elaborate on that further.\"];\n    const randomFeedback = simulatedFeedback[Math.floor(Math.random() * simulatedFeedback.length)];\n    setFeedback(randomFeedback);\n    setScore(score + 10); // Simulate scoring\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getDifficultyColor = difficulty => {\n    switch (difficulty.toLowerCase()) {\n      case 'easy':\n        return '#10b981';\n      // green\n      case 'medium':\n        return '#f59e0b';\n      // yellow\n      case 'hard':\n        return '#ef4444';\n      // red\n      default:\n        return '#6b7280';\n      // gray\n    }\n  };\n  const getCategoryIcon = category => {\n    switch (category.toLowerCase()) {\n      case 'technical':\n        return '💻';\n      case 'behavioral':\n        return '👥';\n      case 'experience':\n        return '💼';\n      case 'project':\n        return '🚀';\n      case 'general':\n        return '❓';\n      default:\n        return '📝';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-practice\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interview Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading interview questions based on your resume...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-practice\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interview Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No interview questions available. Please upload a resume first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n  if (!practiceMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-practice\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interview Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Get ready to practice interview questions tailored to your resume!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Questions Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Questions: \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-categories\",\n          children: ['Technical', 'Behavioral', 'Experience', 'Project', 'General'].map(category => {\n            const count = questions.filter(q => q.category === category).length;\n            return count > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-badge\",\n              children: [getCategoryIcon(category), \" \", category, \": \", count]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPractice,\n        className: \"start-practice-btn\",\n        children: \"Start Practice Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-practice\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Interview Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score\",\n          children: [\"Score: \", score, \"/\", totalScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timer\",\n          children: [\"\\u23F1\\uFE0F \", formatTime(timer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category\",\n          style: {\n            color: getDifficultyColor(currentQuestion.difficulty)\n          },\n          children: [getCategoryIcon(currentQuestion.category), \" \", currentQuestion.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"difficulty\",\n          style: {\n            color: getDifficultyColor(currentQuestion.difficulty)\n          },\n          children: currentQuestion.difficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userAnswer\",\n          children: \"Your Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"userAnswer\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          placeholder: \"Type your answer here...\",\n          rows: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitAnswer,\n            disabled: !userAnswer.trim(),\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextQuestion,\n            children: currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Finish Practice'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Feedback:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Practice Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: questions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Total Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: currentQuestionIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Answered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Points Earned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Time Spent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(InterviewPractice, \"Ep+/WNP6ncI2qUiYj+irV0M22Lg=\");\n_c = InterviewPractice;\nexport default InterviewPractice;\nvar _c;\n$RefreshReg$(_c, \"InterviewPractice\");","map":{"version":3,"names":["React","useState","useEffect","predictInterviewQuestions","jsxDEV","_jsxDEV","InterviewPractice","resumeData","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswer","setUserAnswer","feedback","setFeedback","score","setScore","totalScore","setTotalScore","loading","setLoading","practiceMode","setPracticeMode","timer","setTimer","isActive","setIsActive","fetchInterviewQuestions","interval","setInterval","clearInterval","response","data","length","error","console","startPractice","nextQuestion","submitAnswer","simulatedFeedback","randomFeedback","Math","floor","random","formatTime","seconds","mins","secs","toString","padStart","getDifficultyColor","difficulty","toLowerCase","getCategoryIcon","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","count","filter","q","onClick","currentQuestion","style","width","color","question","htmlFor","id","value","onChange","e","target","placeholder","rows","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/rachu/Downloads/AI resume2/ai-career-platform/frontend/src/components/InterviewPractice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { predictInterviewQuestions } from '../services/api';\r\nimport './InterviewPractice.css';\r\n\r\nconst InterviewPractice = ({ resumeData }) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [practiceMode, setPracticeMode] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  // Fetch interview questions when resume data is available\r\n  useEffect(() => {\r\n    if (resumeData) {\r\n      fetchInterviewQuestions();\r\n    }\r\n  }, [resumeData]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setTimer(timer => timer + 1);\r\n      }, 1000);\r\n    } else if (!isActive && timer !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, timer]);\r\n\r\n  const fetchInterviewQuestions = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await predictInterviewQuestions(resumeData);\r\n      setQuestions(response.data.questions || []);\r\n      setTotalScore(response.data.questions ? response.data.questions.length * 10 : 0);\r\n    } catch (error) {\r\n      console.error('Error fetching interview questions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startPractice = () => {\r\n    if (questions.length > 0) {\r\n      setPracticeMode(true);\r\n      setCurrentQuestionIndex(0);\r\n      setUserAnswer('');\r\n      setFeedback('');\r\n      setScore(0);\r\n      setTimer(0);\r\n      setIsActive(true);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setUserAnswer('');\r\n      setFeedback('');\r\n    } else {\r\n      // End of practice\r\n      setIsActive(false);\r\n      setFeedback('Practice completed! Great job!');\r\n    }\r\n  };\r\n\r\n  const submitAnswer = () => {\r\n    // In a real implementation, this would use AI to analyze the answer\r\n    // For now, we'll provide simulated feedback\r\n    const simulatedFeedback = [\r\n      \"Great answer! You demonstrated strong knowledge of the subject.\",\r\n      \"Good response, but consider providing more specific examples.\",\r\n      \"Your answer shows understanding, but try to be more concise.\",\r\n      \"Excellent point! That's exactly what interviewers look for.\",\r\n      \"Good start, but you might want to elaborate on that further.\"\r\n    ];\r\n    \r\n    const randomFeedback = simulatedFeedback[Math.floor(Math.random() * simulatedFeedback.length)];\r\n    setFeedback(randomFeedback);\r\n    setScore(score + 10); // Simulate scoring\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty.toLowerCase()) {\r\n      case 'easy': return '#10b981'; // green\r\n      case 'medium': return '#f59e0b'; // yellow\r\n      case 'hard': return '#ef4444'; // red\r\n      default: return '#6b7280'; // gray\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category) => {\r\n    switch (category.toLowerCase()) {\r\n      case 'technical': return '💻';\r\n      case 'behavioral': return '👥';\r\n      case 'experience': return '💼';\r\n      case 'project': return '🚀';\r\n      case 'general': return '❓';\r\n      default: return '📝';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"interview-practice\">\r\n        <h2>Interview Practice</h2>\r\n        <p>Loading interview questions based on your resume...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return (\r\n      <div className=\"interview-practice\">\r\n        <h2>Interview Practice</h2>\r\n        <p>No interview questions available. Please upload a resume first.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!practiceMode) {\r\n    return (\r\n      <div className=\"interview-practice\">\r\n        <h2>Interview Practice</h2>\r\n        <p>Get ready to practice interview questions tailored to your resume!</p>\r\n        \r\n        <div className=\"questions-overview\">\r\n          <h3>Questions Overview</h3>\r\n          <p>Total Questions: {questions.length}</p>\r\n          <div className=\"question-categories\">\r\n            {['Technical', 'Behavioral', 'Experience', 'Project', 'General'].map(category => {\r\n              const count = questions.filter(q => q.category === category).length;\r\n              return count > 0 ? (\r\n                <span key={category} className=\"category-badge\">\r\n                  {getCategoryIcon(category)} {category}: {count}\r\n                </span>\r\n              ) : null;\r\n            })}\r\n          </div>\r\n        </div>\r\n        \r\n        <button onClick={startPractice} className=\"start-practice-btn\">\r\n          Start Practice Session\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"interview-practice\">\r\n      <h2>Interview Practice</h2>\r\n      \r\n      <div className=\"practice-header\">\r\n        <div className=\"progress\">\r\n          <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"score-timer\">\r\n          <span className=\"score\">Score: {score}/{totalScore}</span>\r\n          <span className=\"timer\">⏱️ {formatTime(timer)}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      {currentQuestion && (\r\n        <div className=\"question-card\">\r\n          <div className=\"question-header\">\r\n            <span className=\"category\" style={{ color: getDifficultyColor(currentQuestion.difficulty) }}>\r\n              {getCategoryIcon(currentQuestion.category)} {currentQuestion.category}\r\n            </span>\r\n            <span className=\"difficulty\" style={{ color: getDifficultyColor(currentQuestion.difficulty) }}>\r\n              {currentQuestion.difficulty}\r\n            </span>\r\n          </div>\r\n          <h3>{currentQuestion.question}</h3>\r\n          \r\n          <div className=\"answer-section\">\r\n            <label htmlFor=\"userAnswer\">Your Answer:</label>\r\n            <textarea\r\n              id=\"userAnswer\"\r\n              value={userAnswer}\r\n              onChange={(e) => setUserAnswer(e.target.value)}\r\n              placeholder=\"Type your answer here...\"\r\n              rows=\"6\"\r\n            />\r\n            \r\n            <div className=\"answer-actions\">\r\n              <button onClick={submitAnswer} disabled={!userAnswer.trim()}>\r\n                Submit Answer\r\n              </button>\r\n              <button onClick={nextQuestion}>\r\n                {currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Finish Practice'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {feedback && (\r\n            <div className=\"feedback\">\r\n              <h4>Feedback:</h4>\r\n              <p>{feedback}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"practice-stats\">\r\n        <h4>Practice Statistics</h4>\r\n        <div className=\"stats-grid\">\r\n          <div className=\"stat-card\">\r\n            <span className=\"stat-value\">{questions.length}</span>\r\n            <span className=\"stat-label\">Total Questions</span>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <span className=\"stat-value\">{currentQuestionIndex + 1}</span>\r\n            <span className=\"stat-label\">Answered</span>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <span className=\"stat-value\">{score}</span>\r\n            <span className=\"stat-label\">Points Earned</span>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <span className=\"stat-value\">{formatTime(timer)}</span>\r\n            <span className=\"stat-label\">Time Spent</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewPractice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}