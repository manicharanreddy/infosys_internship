{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rachu\\\\Downloads\\\\AI resume2\\\\ai-career-platform\\\\frontend\\\\src\\\\components\\\\FutureSkillPredictor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { predictFutureSkills } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FutureSkillPredictor = ({\n  resumeSkills = []\n}) => {\n  _s();\n  const [skills, setSkills] = useState('');\n  const [predictionResult, setPredictionResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [availableSkills, setAvailableSkills] = useState([]);\n\n  // Fetch available skills when component mounts\n  useEffect(() => {\n    // In a real implementation, this would fetch from the backend\n    // For now, we'll use common skills\n    const commonSkills = ['Python', 'JavaScript', 'React', 'Node.js', 'Java', 'C++', 'C#', 'Machine Learning', 'Data Science', 'Artificial Intelligence', 'Cloud Computing', 'AWS', 'Azure', 'GCP', 'Docker', 'Kubernetes', 'Cybersecurity', 'DevOps', 'SQL', 'MongoDB', 'PostgreSQL', 'HTML', 'CSS', 'Vue.js', 'Angular', 'TensorFlow', 'PyTorch'];\n    setAvailableSkills(commonSkills);\n\n    // Set default skills if resume skills are available\n    if (resumeSkills.length > 0) {\n      setSkills(resumeSkills.join(', '));\n    }\n  }, [resumeSkills]);\n  const handlePredict = async e => {\n    e.preventDefault();\n    if (!skills.trim()) {\n      alert('Please enter your skills');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await predictFutureSkills({\n        skills\n      });\n      setPredictionResult(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Prediction error:', error);\n      setPredictionResult({\n        error: 'Failed to predict future skills: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message)\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSkillChange = e => {\n    const selectedSkill = e.target.value;\n    if (selectedSkill && !skills.includes(selectedSkill)) {\n      const newSkills = skills ? `${skills}, ${selectedSkill}` : selectedSkill;\n      setSkills(newSkills);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"future-skill-predictor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Future Skill Predictor (2-5 Year Forecast)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePredict,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"skills\",\n          children: \"Current Skills:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skills-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"skills\",\n            onChange: handleSkillChange,\n            disabled: loading,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select skills to add...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), availableSkills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: skill,\n              children: skill\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: skills,\n            onChange: e => setSkills(e.target.value),\n            placeholder: \"Selected skills will appear here (comma separated)\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Predicting with ML...' : 'Predict Future Skills'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), predictionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      children: predictionResult.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"Error: \", predictionResult.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Future Skills Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Based on your current skills: \", predictionResult.currentSkills.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Predicted In-Demand Skills (ML-Powered):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"predictions\",\n          children: predictionResult.predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [prediction.skill, \" - \", prediction.trend, \" (\", prediction.growth_rate, \"% growth)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prediction.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(FutureSkillPredictor, \"6hhgfg6Q5ot3tnuI60iAGxRDj4s=\");\n_c = FutureSkillPredictor;\nexport default FutureSkillPredictor;\nvar _c;\n$RefreshReg$(_c, \"FutureSkillPredictor\");","map":{"version":3,"names":["React","useState","useEffect","predictFutureSkills","jsxDEV","_jsxDEV","Fragment","_Fragment","FutureSkillPredictor","resumeSkills","_s","skills","setSkills","predictionResult","setPredictionResult","loading","setLoading","availableSkills","setAvailableSkills","commonSkills","length","join","handlePredict","e","preventDefault","trim","alert","response","data","error","_error$response","_error$response$data","console","message","handleSkillChange","selectedSkill","target","value","includes","newSkills","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","disabled","map","skill","index","type","placeholder","readOnly","currentSkills","predictions","prediction","trend","growth_rate","description","_c","$RefreshReg$"],"sources":["C:/Users/rachu/Downloads/AI resume2/ai-career-platform/frontend/src/components/FutureSkillPredictor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { predictFutureSkills } from '../services/api';\r\n\r\nconst FutureSkillPredictor = ({ resumeSkills = [] }) => {\r\n  const [skills, setSkills] = useState('');\r\n  const [predictionResult, setPredictionResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [availableSkills, setAvailableSkills] = useState([]);\r\n\r\n  // Fetch available skills when component mounts\r\n  useEffect(() => {\r\n    // In a real implementation, this would fetch from the backend\r\n    // For now, we'll use common skills\r\n    const commonSkills = [\r\n      'Python', 'JavaScript', 'React', 'Node.js', 'Java', 'C++', 'C#',\r\n      'Machine Learning', 'Data Science', 'Artificial Intelligence',\r\n      'Cloud Computing', 'AWS', 'Azure', 'GCP', 'Docker', 'Kubernetes',\r\n      'Cybersecurity', 'DevOps', 'SQL', 'MongoDB', 'PostgreSQL',\r\n      'HTML', 'CSS', 'Vue.js', 'Angular', 'TensorFlow', 'PyTorch'\r\n    ];\r\n    setAvailableSkills(commonSkills);\r\n    \r\n    // Set default skills if resume skills are available\r\n    if (resumeSkills.length > 0) {\r\n      setSkills(resumeSkills.join(', '));\r\n    }\r\n  }, [resumeSkills]);\r\n\r\n  const handlePredict = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!skills.trim()) {\r\n      alert('Please enter your skills');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await predictFutureSkills({ skills });\r\n      setPredictionResult(response.data);\r\n    } catch (error) {\r\n      console.error('Prediction error:', error);\r\n      setPredictionResult({ error: 'Failed to predict future skills: ' + (error.response?.data?.error || error.message) });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSkillChange = (e) => {\r\n    const selectedSkill = e.target.value;\r\n    if (selectedSkill && !skills.includes(selectedSkill)) {\r\n      const newSkills = skills ? `${skills}, ${selectedSkill}` : selectedSkill;\r\n      setSkills(newSkills);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"future-skill-predictor\">\r\n      <h2>Future Skill Predictor (2-5 Year Forecast)</h2>\r\n      <form onSubmit={handlePredict}>\r\n        <div>\r\n          <label htmlFor=\"skills\">Current Skills:</label>\r\n          <div className=\"skills-input-container\">\r\n            <select\r\n              id=\"skills\"\r\n              onChange={handleSkillChange}\r\n              disabled={loading}\r\n            >\r\n              <option value=\"\">Select skills to add...</option>\r\n              {availableSkills.map((skill, index) => (\r\n                <option key={index} value={skill}>{skill}</option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              value={skills}\r\n              onChange={(e) => setSkills(e.target.value)}\r\n              placeholder=\"Selected skills will appear here (comma separated)\"\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Predicting with ML...' : 'Predict Future Skills'}\r\n        </button>\r\n      </form>\r\n      \r\n      {predictionResult && (\r\n        <div className=\"prediction-result\">\r\n          {predictionResult.error ? (\r\n            <p className=\"error\">Error: {predictionResult.error}</p>\r\n          ) : (\r\n            <>\r\n              <h3>Future Skills Forecast</h3>\r\n              <p>Based on your current skills: {predictionResult.currentSkills.join(', ')}</p>\r\n              \r\n              <h4>Predicted In-Demand Skills (ML-Powered):</h4>\r\n              <div className=\"predictions\">\r\n                {predictionResult.predictions.map((prediction, index) => (\r\n                  <div key={index} className=\"prediction-item\">\r\n                    <h5>{prediction.skill} - {prediction.trend} ({prediction.growth_rate}% growth)</h5>\r\n                    <p>{prediction.description}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FutureSkillPredictor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}